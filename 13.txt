
  记录下来以便未来看看现在的自己！！


1，js和html是通过观察员模式进行连接的，js绑定事件触发的代码，当事件发生时运行对应的js代码!

2，目前大部分浏览器都实现了‘Dom2级事件’，ie8是最后一个仍然使用其专有事件系统的浏览器，

3，事件流描述的是从页面中接收事件的顺序，ie的是事件冒泡（event bubbling），就是先从最具体的元素，然后再往上传播，依次是

div>body>html>document,,最高层是document，现在的大部分浏览器也会将事件一直冒泡到window对象，net团队的是事件捕获（event

capturing）,依次是 document>html>body>div,现在大部分浏览器都是支持事件捕获的，dom2级虽然要求是从document开始捕获。但大部分浏览

器还是从window对象开始捕获事件的。

4.Dom2级规定的事件流包括三个阶段：事件捕获阶段，处于目标阶段，事件冒泡阶段，按照标准，在捕获阶段是不涉及事件目标的，但大部分浏览器

都会在捕获阶段触发事件对象上的事件，这样就有两次机会在目标对象上面操作事件。

在DOM事件流中，实际的目标（<div>元素）在捕获阶段不会接收到事件。这意味着在捕获阶段，事件从document到<html>再到<body>后就停止了。下一个阶段是“处于目标”阶段，于是事件在<div>上发生，并在事件处理（后面将会讨论这个概念）中被看成冒泡阶段的一部分。然后，冒泡阶段发生，事件又传播回文档。

5，js在为事件处理程序的方式有几种：

   1：html事件处理程序，比如 onclick=‘alert（‘kinsliy’）’,在指定的onclick属性的后面代码里，是可以访问全局的代码的，直接函数名调用，

   这样的事处理方式，有两个不好的地方，一个是兼容性，另一个是当解析html代码时，js调用的函数还没有解析，会出现错误。


  2，Dom0级事件处理程序，通过js指定事件处理程序的传统方式就是将一个函数赋值给一个事件处理程序属性，比如 onclick=‘a()'，

  btn.onclick=funtion(){

     alert('a')

  }

Dom0级被认为是元素的方法，事件处理程序是在元素的作用域中运行的，函数中this指向引用的当前元素，alert（this.id）;以这种方式添加的事件处理

程序会在事件流的冒泡阶段被处理，而删除Dom0级指定的程序直接像这样就好了，btn,onclick=null,赋值为null；同样的删除html指定事件处理程序直

接赋值为null也就好啦，（这个我还没实践过，）

3，Dom2级事件处理程序，addEventListener()和removeEventListener(),两个函数分别接收三个参数：要处理的事件名，作为事件处理程序的函

数，一个布尔值，布尔值为true，则表示在捕获阶段调用事件处理程序，为false的时候，表示在冒泡阶段处理事件程序。

  btn.addEventListener('click',function(){

     alert(this.id)

 },false)

 Dom2级的好处是可以可以添加多个事件处理程序，当触发了事件，会依次按照添加它们的顺序触发函数运行，而删除则用removeEventListener函数来

删除，由于需要传入的三个参数必须相同，所以匿名函数的事件处理程序没法删除，所以一般先声明所要运行的函数，然后

btn,addEventListener('click',handler,false)。书上建议不是特别需要，添加事件到事件流的冒泡阶段！！

6：IE事件处理程序，attachEvent()和detachEvent()。接收两个参数：事件名称和事件处理函数，ie8以前是只支持冒泡的，而且第一个事件名称

要加on，对比 ie是 onclick，而Dom2级是click。同时ie的匿名函数中的this不是指向当前元素，而是指向window，同时ie中的执行顺序，不是按照

添加的顺序，而是相反的顺序，（ie的工程师的脑子是怎么想的？？）。同样的匿名函数无法被删除，但可以删除命名函数。（没事多声明函数啊）

7：事件对象，在触发事件时，会产生一个事件对象event，这个event包含着很多信息，所有浏览器都支持，只是支持的方式不一样，这个event有很多属

性，比如常见的 event.type  event.target event.preventDefault()

  1：在处于相同的目标时 this，event.target,event.currentTarget是相同的，指向同一个值，而如果事件处理函数是绑定到父元素上比如body上的，

那么this，event.currentTarget是指定到body上的，也就是事件函数绑定的元素，而event.atrget是等于点击的元素。

2，阻止默认行为。是用event.preventDefault()。但只有event.cancelable为true的事件才可以使用preventDefault来阻止默认行为。

3，阻止进一步的事件捕获或冒泡用event.stopPropagation(),比如你在元素上绑定了事件，然后运行了event.stopPropagation()，那么在

父元素比如body上的事件就不会触发了。

4：event.eventPhase是表示事件正处于事件流的哪个阶段，1代表捕获阶段，2代表目标对象，3代表冒泡阶段，只有等于2的时候。target，

currenttarget 和this才会相等。

5：只有事件处理期间，event才会存在，事件不运行，event是不存在的（有点废话）；

8：ie中的事件对象，首先访问ie的event对象有几种方式，第一种在dom0级event是作为window的一个属性存在，window.event，在以

attachEvent方法中也可以用windo.event来获取，但一般还是直接用event来获取，经常地在标准的dom中 event.target 在ie中就是event。

srcElement,对应的preventDefault在ie中就是event。returnValue=false;而stopPropagation（）在ie中就是 event.cancelBubble=false；

9:事件类型，ui事件，焦点事件，鼠标事件，等等，这个里面太多了，直接用到的时候看就好，或者你写的多了就知道啦，

10：总计：在以前经常知道的就是事件委托，在初学的时候，真的听了不少这个词，在事件还有像手势这些，还有模拟事件。这些可以需要的时候再去搜索

看文档，手势可以自己写个轮子出来！！